package bot

import (
	"fmt"
	"log"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
	"vpn-bot/internal/db"
	"vpn-bot/internal/services"
)

// reserveKeyAndCreatePayment —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ—Ç VLESS-–∫–ª—é—á –∏ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ –Æ–∫–∞—Å—Å—É.
func reserveKeyAndCreatePayment(bot *tgbotapi.BotAPI, chatID int64, serverID, months int) {
	// –ü–æ–∏—Å–∫ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –∫–ª—é—á–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –Ω–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω.
	var key db.VLESSKey
	err := db.DB.
		Where("server_id = ? AND is_used = false AND (reserved_until IS NULL OR reserved_until < NOW())", serverID).
		First(&key).Error
	if err != nil {
		msg := tgbotapi.NewMessage(chatID, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π üòû")
		bot.Send(msg)
		return
	}

	// –†–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –Ω–∞ 5 –º–∏–Ω—É—Ç
	reservedUntil := time.Now().Add(5 * time.Minute)
	if err := db.DB.Model(&key).Update("reserved_until", reservedUntil).Error; err != nil {
		log.Printf("üî¥ –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞: %v", err)
		msg := tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–ª—é—á–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		bot.Send(msg)
		return
	}

	// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã
	var server db.Server
	if err := db.DB.First(&server, serverID).Error; err != nil {
		msg := tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
		bot.Send(msg)
		return
	}

	// –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
	// üî¥ ! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ë–î –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ Price1 –∑–∞–¥–∞–Ω –±–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 500‚ÇΩ)
	price := server.Price1 * float64(months)
	if months == 3 {
		price *= 0.95
	} else if months == 6 {
		price *= 0.90
	} else if months == 12 {
		price *= 0.85
	}

	// –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –Æ–∫–∞—Å—Å—É
	paymentID, paymentURL, err := services.CreateYooKassaPayment(chatID, price)
	if err != nil {
		log.Printf("üî¥ –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: %v", err)
		msg := tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		bot.Send(msg)
		return
	}

	// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –ë–î
	payment := db.Payment{
		UserID:     int(chatID), // üî¥ ! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Telegram ID –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ int
		YooKassaID: paymentID,
		Amount:     price,
		Status:     "pending",
	}
	if err := db.DB.Create(&payment).Error; err != nil {
		log.Printf("üî¥ –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ø–ª–∞—Ç–µ–∂–∞ –≤ –ë–î: %v", err)
		msg := tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		bot.Send(msg)
		return
	}

	// –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	text := fmt.Sprintf("‚úÖ –í–∞—à VLESS-–∫–ª—é—á –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω!\nüí∞ –°—É–º–º–∞: %.2f‚ÇΩ\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n%s", price, paymentURL)
	msg := tgbotapi.NewMessage(chatID, text)
	bot.Send(msg)
}
