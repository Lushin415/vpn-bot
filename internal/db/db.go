package db

import (
	"fmt"
	"log"
	"os"

	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

var DB *gorm.DB

// InitDB –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ PostgreSQL –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π.
// üî¥ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!
func InitDB() {
	dsn := os.Getenv("DATABASE_URL") // üî¥ ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ DATABASE_URL –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!
	if dsn == "" {
		log.Fatal("üî¥ –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω–∞!")
	}

	dbInstance, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatalf("üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: %v", err)
	}

	// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π: User, Server, VLESSKey, Payment
	err = dbInstance.AutoMigrate(&User{}, &Server{}, &VLESSKey{}, &Payment{})
	if err != nil {
		log.Fatalf("üî¥ –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: %v", err)
	}

	DB = dbInstance
	fmt.Println("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∏ –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
}
